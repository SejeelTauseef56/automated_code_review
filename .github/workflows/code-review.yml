name: Code Review

on:
  push:
    branches:
      - master  # Trigger only on 'master' branch

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout master branch
        run: git checkout master  # Ensure you're on the master branch

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install Composer dependencies
        run: composer install

      - name: Create feedback directory
        run: mkdir -p feedback  # Ensure feedback directory exists

      - name: Get Changed Files and Run Review
        run: |
          echo "Getting list of changed files..."

          # Show the last commit for debugging
          echo "Committed files in the last commit:"
          git log -1 --name-only

          # Ensure there are at least two commits (to compare HEAD~1 and HEAD)
          commit_count=$(git rev-list --count HEAD)
          if [ "$commit_count" -lt 2 ]; then
            echo "Only one commit found. Skipping comparison."
            changed_files=$(git diff --name-only HEAD^ HEAD)  # Or any other logic to handle single commit
          else
            # Get the list of files changed in the last commit
            changed_files=$(git diff --name-only HEAD~1 HEAD)
          fi

          if [ -z "$changed_files" ]; then
            echo "No changes detected in the latest commit."
            exit 0
          fi

          echo "Changed files to be reviewed:"
          echo "$changed_files" | sort | uniq  # Sort and remove duplicates for clean output

          # Filter out files that aren't code files (e.g., configuration files)
          filtered_files=$(echo "$changed_files" | grep -E '\.php$|\.js$|\.html$')

          # Review each changed code file and save feedback to respective .txt file
          echo "$filtered_files" | sort | uniq | while read -r file; do
            if [ -f "$file" ]; then  # Ensure it's a valid file
              echo "Reviewing $file..."
              feedback_file="feedback/$(basename "$file")_feedback.txt"
              php review_code.php "$file" > "$feedback_file" || echo "Error reviewing $file"
              echo "Feedback for $file saved to $feedback_file"

              # Show the actual code changes (diffs) for the current commit
              echo "Code changes for $file:"
              git show --stat -- "$file"  # Show code changes for the current commit
            else
              echo "Skipping invalid or deleted file: $file"
            fi
          done

      - name: Upload feedback files as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: feedback
          path: feedback/

        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
