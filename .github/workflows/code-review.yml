name: Code Review

on:
  push:
    branches:
      - master

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # This ensures we fetch the full history

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install Composer dependencies
        run: composer install

      - name: Create feedback directory
        run: mkdir -p feedback

      - name: Get Changed Files and Run Review
        run: |
          echo "Getting list of changed files..."
          
          # Get the current commit hash
          CURRENT_COMMIT=$(git rev-parse HEAD)
          
          # Get the list of changed files in the current commit
          changed_files=$(git diff-tree --no-commit-id --name-only -r $CURRENT_COMMIT)
          
          if [ -z "$changed_files" ]; then
            echo "No changes detected in the current commit."
            exit 0
          fi

          echo "Changed files to be reviewed:"
          echo "$changed_files"

          # Filter for code files
          filtered_files=$(echo "$changed_files" | grep -E '\.php$|\.js$|\.html$')

          # Review each changed file
          echo "$filtered_files" | while read -r file; do
            if [[ -f "$file" && ! "$file" =~ \.github/workflows/ ]]; then
              echo "Reviewing $file..."
              feedback_file="feedback/$(basename "$file")_feedback.txt"
              php review_code.php "$file" > "$feedback_file" || echo "Error reviewing $file"
              echo "Feedback for $file saved to $feedback_file"

              # Show the changes for this file
              echo "Code changes for $file:"
              git show $CURRENT_COMMIT -- "$file"
            else
              echo "Skipping invalid, deleted, or non-code file: $file"
            fi
          done

      - name: Upload feedback files as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: feedback
          path: feedback/
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}